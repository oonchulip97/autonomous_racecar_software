<?xml version="1.0"?>
<!--
  This node presents a fast and precise method to estimate the planar motion of a lidar
  from consecutive range scans. It is very useful for the estimation of the robot odometry from
  2D laser range measurements.

  For more info please visit: http://mapir.isa.uma.es/work/rf2o

  Requirements:
  - 2D laser scan, publishing sensor_msgs::LaserScan
  - tf::transform from the laser to the robot base
  - MRPT (http://www.mrpt.org/) CHULIP: Not sure this is needed from past pull request
        - Tested with v1.3 (official ubuntu release)
-->
<launch>
  <arg name="laser_scan_topic"     default="scan"/>
  <arg name="odom_topic"           default="odom"/>
  <arg name="base_frame_id"        default="base_link"/>
  <arg name="odom_frame_id"        default="odom"/>
  <arg name="publish_tf"           default="false"/>
  <arg name="init_pose_from_topic" default=""/>
  <arg name="freq"                 default="2.0"/>
  <arg name="verbose"              default="false"/>

  <node name="rf2o_laser_odometry" pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" output="screen">
    <param name="laser_scan_topic"     value="$(arg laser_scan_topic)"/> <!-- topic publishing the lidar scans -->
    <param name="odom_topic"           value="$(arg odom_topic)"/> <!-- topic to publish the odometry estimations  -->
    <!-- A tf::transform from the laser_frame to the base_frame is mandatory -->
    <param name="base_frame_id"        value="$(arg base_frame_id)"/> <!-- frame_id (tf) of the mobile robot base -->
    <param name="odom_frame_id"        value="$(arg odom_frame_id)"/> <!-- frame_id (tf) to publish the odometry estimations -->
    <param name="publish_tf"           value="$(arg publish_tf)"/> <!-- whether or not to publish the tf::transform (base->odom) -->
    <!-- Leave empty to start at coordinate (0,0) -->
    <param name="init_pose_from_topic" value="$(arg init_pose_from_topic)"/> <!-- topic to initialize pose -->
    <param name="freq"                 value="$(arg freq)"/> <!-- execution frequency -->
    <param name="verbose"              value="$(arg verbose)"/> <!-- verbosity -->
  </node>
</launch>
